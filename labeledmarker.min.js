function LabeledMarker(b, a) {
    this.latlng_ = b;
    this.opts_ = a || {};
    this.labelText_ = this.opts_.labelText || "";
    this.labelClass_ = this.opts_.labelClass || "LabeledMarker_markerLabel";
    this.labelOffset_ = this.opts_.labelOffset || new GSize(0, 0);
    this.clickable_ = this.opts_.clickable || true;
    if (this.opts_.draggable) {
        this.opts_.draggable = false
    }
    GMarker.apply(this, arguments)
}
LabeledMarker.prototype = new GMarker(new GLatLng(0, 0));
LabeledMarker.prototype.initialize = function (d) {
    GMarker.prototype.initialize.apply(this, arguments);
    this.map_ = d;
    this.div_ = document.createElement("div");
    this.div_.className = this.labelClass_;
    this.div_.innerHTML = this.labelText_;
    this.div_.style.position = "absolute";
    this.div_.style.cursor = "pointer";
    d.getPane(G_MAP_MARKER_PANE).appendChild(this.div_);
    if (this.clickable_) {
        function a(g, f) {
            return function () {
                GEvent.trigger(g, f)
            }
        }

        var e = ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout"];
        for (var c = 0; c < e.length; c++) {
            var b = e[c];
            GEvent.addDomListener(this.div_, b, a(this, b))
        }
    }
};
LabeledMarker.prototype.redraw = function (a) {
    GMarker.prototype.redraw.apply(this, arguments);
    var b = this.map_.fromLatLngToDivPixel(this.latlng_);
    var c = GOverlay.getZIndex(this.latlng_.lat());
    this.div_.style.left = (b.x + this.labelOffset_.width) + "px";
    this.div_.style.top = (b.y + this.labelOffset_.height) + "px";
    this.div_.style.zIndex = c
};
LabeledMarker.prototype.remove = function () {
    GEvent.clearInstanceListeners(this.div_);
    this.div_.parentNode.removeChild(this.div_);
    this.div_ = null;
    GMarker.prototype.remove.apply(this, arguments)
};
LabeledMarker.prototype.copy = function () {
    return new LabeledMarker(this.latlng_, this.opt_opts_)
};