function GScript(a) {
    document.write('<script src="' + a + '" type="text/javascript"><\/script>')
}
if (window.location.toString().substr(0, 4) == "file") {
    var key = "ABQIAAAAS-9BXlmhAxzk5tMQ6009tBQ60YHOa08tQ3Rk7kk6p9CpE9bRLhRgOlUOLYUPHsGwp_XgmEwZWB1hnA"
} else {
    var key = "ABQIAAAAS-9BXlmhAxzk5tMQ6009tBSuPyGFyYqpbBL0yyePbwJ9Yzj2TRSRG70K1wsky3JHARggI0ccbJ3Y0A"
}
GScript("http://maps.google.com/maps?file=api&amp;v=2&amp;key=" + key);
GScript("./geohash.js");
GScript("./labeledmarker.js");
var ZOOMLEVELS = {3: 7, 4: 10, 5: 12, 6: 15, 7: 17, 8: 17};
function getWindowDimensions() {
    var b = 0, a = 0;
    if (typeof(window.innerWidth) == "number") {
        b = window.innerWidth;
        a = window.innerHeight
    } else {
        if (document.documentElement && (document.documentElement.clientWidth || document.documentElement.clientHeight)) {
            b = document.documentElement.clientWidth;
            a = document.documentElement.clientHeight
        } else {
            if (document.body && (document.body.clientWidth || document.body.clientHeight)) {
                b = document.body.clientWidth;
                a = document.body.clientHeight
            }
        }
    }
    return {width: b, height: a}
}
function wheelZoom(b) {
    (b.detail || -b.wheelDelta) < 0 ? map.zoomIn() : map.zoomOut()
}
function sizeMap() {
    var b = getWindowDimensions();
    var a = document.getElementById("map");
    a.style.height = b.height - 120;
    a.style.width = b.width;
    var d = document.getElementById("header");
    d.style.width = b.width - 30;
    var c = document.getElementById("credits");
    c.style.left = b.width - 180;
    map = new GMap2(a);
    map.setCenter(new GLatLng(39.024, -76.51), 9);
    map.addControl(new GSmallMapControl())
}
GeoHashBox.prototype.centerMap = function () {
    map.setCenter(this.centerPoint, ZOOMLEVELS[this.geohash.length])
};
GeoHashBox.prototype.showNeighbors = function () {
    var a = this.geohash.substr(0, this.geohash.length - 1);
    this.neighbors.top = new GeoHashBox(calculateAdjacent(this.geohash, "top"));
    this.neighbors.bottom = new GeoHashBox(calculateAdjacent(this.geohash, "bottom"));
    this.neighbors.right = new GeoHashBox(calculateAdjacent(this.geohash, "right"));
    this.neighbors.left = new GeoHashBox(calculateAdjacent(this.geohash, "left"));
    this.neighbors.topleft = new GeoHashBox(calculateAdjacent(this.neighbors.left.geohash, "top"));
    this.neighbors.topright = new GeoHashBox(calculateAdjacent(this.neighbors.right.geohash, "top"));
    this.neighbors.bottomright = new GeoHashBox(calculateAdjacent(this.neighbors.right.geohash, "bottom"));
    this.neighbors.bottomleft = new GeoHashBox(calculateAdjacent(this.neighbors.left.geohash, "bottom"))
};
GeoHashBox.prototype.plot = function () {
    var b = new GPolygon([this.corners.topleft, this.corners.topright, this.corners.bottomright, this.corners.bottomleft, this.corners.topleft], "#007799", 3, 0.7, "#003366", 0.5, {geodesic: true});
    map.addOverlay(b);
    var a = new LabeledMarker(new GLatLng(this.box.latitude[2], this.box.longitude[2]), this.options);
    map.addOverlay(a)
};
function GeoHashBox(b) {
    this.geohash = b;
    this.box = decodeGeoHash(b);
    this.corners = {};
    this.corners.topleft = new GLatLng(this.box.latitude[0], this.box.longitude[0]);
    this.corners.topright = new GLatLng(this.box.latitude[1], this.box.longitude[0]);
    this.corners.bottomright = new GLatLng(this.box.latitude[1], this.box.longitude[1]);
    this.corners.bottomleft = new GLatLng(this.box.latitude[0], this.box.longitude[1]);
    this.centerPoint = new GLatLng((this.box.latitude[0] + this.box.latitude[1]) / 2, (this.box.longitude[0] + this.box.longitude[1]) / 2);
    this.options = {labelText: b};
    var a = this.geohash.charAt(this.geohash.length - 1);
    this.selfPos = BASE32.indexOf(a);
    this.neighbors = {};
    this.plot()
}
function geocodeAddress() {
    var a = document.getElementById("address").value;
    var b = new GClientGeocoder();
    b.getLatLng(a, plotGeoHash)
}
function plotGeoHash(c) {
    if (c == null) {
        setText("boxList", "Location not found!");
        setText("searchInfo", "");
        return false
    }
    var g = encodeGeoHash(c.lat(), c.lng());
    document.getElementById("geoHash").value = g;
    var d = document.getElementById("hashResolution").value;
    g = g.substr(0, d);
    var a = new GeoHashBox(g);
    a.centerMap();
    a.showNeighbors();
    boxList = document.getElementById("boxList");
    boxList.innerHTML = "LEFT(geohash," + d + ") IN (";
    var f = [];
    for (var b in a.neighbors) {
        f.push("'" + a.neighbors[b].geohash + "'")
    }
    f.push("'" + a.geohash + "'");
    boxList.innerHTML += f.join(",") + ")";
    searchInfo = document.getElementById("searchInfo");
    var k = a.neighbors.topleft.corners.topleft.distanceFrom(a.neighbors.topright.corners.topright);
    var e = a.neighbors.topleft.corners.topleft.distanceFrom(a.neighbors.bottomleft.corners.bottomleft);
    var j = parseInt((k / 1000) * (e / 1000) * 100) / 100;
    if (k > 2000) {
        k = parseInt(k / 10) / 100;
        e = parseInt(e / 10) / 100;
        units = "km"
    } else {
        k = parseInt(k + 0.5);
        e = parseInt(e + 0.5);
        units = "m"
    }
    var h = parseInt(c.lat() * 1000) / 1000;
    var i = parseInt(c.lng() * 1000) / 1000;
    searchInfo.innerHTML = h + ", " + i + " [w:" + k + units + ", h:" + e + units + "] (" + j + "km2)"
}
function setText(b, a) {
    sp = document.getElementById(b);
    sp.innerHTML = a
}
function cleanUp() {
    map.clearOverlays();
    setText("boxList", "");
    setText("searchInfo", "")
}
window.onload = function () {
    if (GBrowserIsCompatible()) {
        window.onresize = sizeMap;
        sizeMap();
        GEvent.addDomListener(document.getElementById("map"), "DOMMouseScroll", wheelZoom);
        GEvent.addDomListener(document.getElementById("map"), "mousewheel", wheelZoom)
    } else {
        alert("Sorry, your browser is lame!")
    }
};